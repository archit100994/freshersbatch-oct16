package mapping;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class MyMain {

	public static void main(String[] args) 
	{
		Configuration configuration = new Configuration();
		configuration.configure("hibernate.cfg.xml");
		SessionFactory sessionFactory = configuration.buildSessionFactory();
		Session session= sessionFactory.openSession();
		Transaction transaction= session.beginTransaction();
		
		stockMarketUpdate((long) 35, "babaji", session);
		
		//session.getTransaction();
		transaction.commit();
		session.close();
		sessionFactory.close();
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public static void customerEnquiryCreate(Session session)
	{
		Enquiry enquiry = new Enquiry("Hello", "Kuch bhi data");
		Customer customer = new Customer("Archit", enquiry);
		session.persist(customer);
		System.out.println("saved!!");
	}
	
	public static void customerEnquiryRetrive(Session session)
	{
		Query query = session.createQuery("from Customer");
		List<Customer> productList = query.list();
		for(Customer enquiry: productList)
		{
			System.out.println(enquiry);
		}
	}
	
	public static void customerEnquiryDelete(Session session)
	{
		Query query  = session.createQuery("delete from Customer where id=5");
		int updates = query.executeUpdate();
		System.out.println("No of records deleted = " + updates);
	}
	
	
	
	
	
	
	
	
	
	public static void stockMarketCreate(Session session)
	{
		Market market = new Market();
		market.setName("Vishal");
		Course stock1 = new Course("abc",152);
		Course stock2 = new Course("def",41);
		Course stock3 = new Course("ghi",84);
		Course stock4 = new Course("klm",10);
		session.save(market);
		
		stock1.setMarket(market);
		stock2.setMarket(market);
		stock3.setMarket(market);
		stock4.setMarket(market);
		
		market.setCourse(new HashSet<Course>());
		market.getCourse().add(stock1);
		market.getCourse().add(stock2);
		market.getCourse().add(stock3);
		market.getCourse().add(stock4);
		
		System.out.println("department saved!!");
		
	}
	
	public static void stockMarketRetrive(Session session)
	{
		Query query = session.createQuery("from Market");
		List<Market> productList = query.list();
		for(Market enquiry: productList)
		{
			System.out.println(enquiry);
		}
	}
	
	public static void stockMarketUpdate(Long marketID, String name, Session session)
	{
		Market market = (Market)session.get(Market.class, marketID); 
		market.setName(name);
		session.save(market);
		//session.update(market);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	public static void studentCourseCreate(Session session)
	{
		Student student = new Student();
		student.setName("Vishal");
		Course course1 = new Course("abc");
		Course course2 = new Course("def");
		Course course3 = new Course("ghi");
		Course course4 = new Course("klm");
		
		Set<Course> courses= new HashSet<Course>();
		courses.add(course1);
		courses.add(course2);
		courses.add(course3);
		courses.add(course4);
		
		student.setCourse(courses);
		
		session.save(student);
		System.out.println("saved!!");
		
	}
	

}
